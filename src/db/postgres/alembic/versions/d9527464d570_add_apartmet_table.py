"""add apartmet table

Revision ID: d9527464d570
Revises: ac9db9acdd47
Create Date: 2024-06-16 18:31:11.543935

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "d9527464d570"
down_revision: Union[str, None] = "ac9db9acdd47"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "apartments",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("room_count", sa.Integer(), nullable=False),
        sa.Column("square", sa.Float(), nullable=False),
        sa.Column("benefits", postgresql.ARRAY(sa.String()), nullable=False),
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.TIMESTAMP(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk__apartments__user_id__users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__apartments")),
        sa.UniqueConstraint("id", name=op.f("uq__apartments__id")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("apartments")
    # ### end Alembic commands ###
